//package com.app.project.main.controllers;
//
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.http.HttpStatus;
//import org.springframework.http.ResponseEntity;
//import org.springframework.security.core.AuthenticationException;
//import org.springframework.web.bind.annotation.PostMapping;
//import org.springframework.web.bind.annotation.RequestBody;
//import org.springframework.web.bind.annotation.RequestMapping;
//import org.springframework.web.bind.annotation.RestController;
//
//import com.app.project.main.dto.LoginDto;
//import com.app.project.main.dto.LoginResponseDto;
//import com.app.project.main.security.CustomUserDetailsServiceImpl;
//import com.app.project.main.services.impl.AuthServiceImpl;
//
//import jakarta.servlet.http.Cookie;
//import jakarta.servlet.http.HttpServletRequest;
//import jakarta.servlet.http.HttpServletResponse;
//
//@RestController
//@RequestMapping("/auth")
//public class AuthController {
//
//	@Autowired
//	private CustomUserDetailsServiceImpl customUserDetailsService;
//
//	@Autowired
//	private AuthServiceImpl authServices;
//
//	@PostMapping("/login")
//	public ResponseEntity<LoginResponseDto> login(@RequestBody LoginDto loginDto, HttpServletRequest request,
//			HttpServletResponse response) {
//		try {
//			LoginResponseDto loginResponseDto = authServices.login(loginDto);
//			if (loginResponseDto == null) {
//				return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(null); // or return an appropriate message
//			}
//
//			// Set the refresh token in a cookie
//			Cookie cookie = new Cookie("refreshToken", loginResponseDto.getRefreshToken());
//			cookie.setHttpOnly(true);
//			cookie.setSecure("production".equals("deployEnv"));
//			response.addCookie(cookie);
//
//			return ResponseEntity.ok(loginResponseDto);
//		} catch (AuthenticationException e) {
//			return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(null); // Or handle the exception accordingly
//		}
//	}
//}
//
////
////@RestController
////@RequestMapping("/auth")
////public class AuthController {
////
////	@Autowired
////	private CustomUserDetailsServiceImpl customUserDetailsService;
////
////	@Autowired
////	private AuthServiceImpl authServices;
////
////	@PostMapping("/login")
////	public ResponseEntity<LoginResponseDto> login(@RequestBody LoginDto loginDto, HttpServletRequest request,
////			HttpServletResponse response) {
////		LoginResponseDto loginResponseDto = authServices.login(loginDto);
////		Cookie cookie = new Cookie("refreshToken", loginResponseDto.getRefreshToken());
////		cookie.setHttpOnly(true);
////		cookie.setSecure("production".equals("deployEnv"));
////		response.addCookie(cookie);
////
////		return ResponseEntity.ok(loginResponseDto);
////	}
////}
